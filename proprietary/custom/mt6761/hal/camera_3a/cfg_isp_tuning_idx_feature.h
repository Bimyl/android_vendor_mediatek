/* Copyright Statement:
 *
 * This software/firmware and related documentation ("MediaTek Software") are
 * protected under relevant copyright laws. The information contained herein
 * is confidential and proprietary to MediaTek Inc. and/or its licensors.
 * Without the prior written permission of MediaTek inc. and/or its licensors,
 * any reproduction, modification, use or disclosure of MediaTek Software,
 * and information contained herein, in whole or in part, shall be strictly prohibited.
 */
/* MediaTek Inc. (C) 2017. All rights reserved.
 *
 * BY OPENING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 * THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
 * RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON
 * AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
 * NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
 * SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
 * SUPPLIED WITH THE MEDIATEK SOFTWARE, AND RECEIVER AGREES TO LOOK ONLY TO SUCH
 * THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES
 * THAT IT IS RECEIVER'S SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD PARTY ALL PROPER LICENSES
 * CONTAINED IN MEDIATEK SOFTWARE. MEDIATEK SHALL ALSO NOT BE RESPONSIBLE FOR ANY MEDIATEK
 * SOFTWARE RELEASES MADE TO RECEIVER'S SPECIFICATION OR TO CONFORM TO A PARTICULAR
 * STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND
 * CUMULATIVE LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
 * AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
 * OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY RECEIVER TO
 * MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 * The following software/firmware and/or related documentation ("MediaTek Software")
 * have been modified by MediaTek Inc. All revisions are subject to any receiver's
 * applicable license agreements with MediaTek Inc.
 */

/********************************************************************************************
 *     LEGAL DISCLAIMER
 *
 *     (Header of MediaTek Software/Firmware Release or Documentation)
 *
 *     BY OPENING OR USING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
 *     THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE") RECEIVED
 *     FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON AN "AS-IS" BASIS
 *     ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES, EXPRESS OR IMPLIED,
 *     INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR
 *     A PARTICULAR PURPOSE OR NONINFRINGEMENT. NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY
 *     WHATSOEVER WITH RESPECT TO THE SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY,
 *     INCORPORATED IN, OR SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK
 *     ONLY TO SUCH THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
 *     NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S SPECIFICATION
 *     OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
 *
 *     BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE LIABILITY WITH
 *     RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE, AT MEDIATEK'S OPTION,
 *     TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE, OR REFUND ANY SOFTWARE LICENSE
 *     FEES OR SERVICE CHARGE PAID BY BUYER TO MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE.
 *
 *     THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE WITH THE LAWS
 *     OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF LAWS PRINCIPLES.
 ************************************************************************************************/
#ifndef _CFG_ISP_TUNING_IDX_FEATURE_H_
#define _CFG_ISP_TUNING_IDX_FEATURE_H_

#include <mtkcam/utils/metadata/client/mtk_metadata_tag.h>

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// N3D_Preview
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ISO 100
IDX_MODE_N3D_Preview( eIDX_ISO_100 )
IDX_SET( DBS:150, OBC:30, BPC:150, NR1:150, PDC:150,  UDM:150, GGM:0, ANR:150, ANR2:150, CCR:0, BOK:0, EE:150, NR3D:100, MFB:0, LCE:0);
// ISO 200
IDX_MODE_N3D_Preview( eIDX_ISO_200 )
IDX_SET( DBS:151, OBC:30, BPC:151, NR1:151, PDC:151,  UDM:151, GGM:0, ANR:151, ANR2:151, CCR:1, BOK:0, EE:151, NR3D:101, MFB:0, LCE:0);
// ISO 400
IDX_MODE_N3D_Preview( eIDX_ISO_400 )
IDX_SET( DBS:152, OBC:30, BPC:152, NR1:152, PDC:152,  UDM:152, GGM:0, ANR:152, ANR2:152, CCR:2, BOK:1, EE:152, NR3D:102, MFB:0, LCE:0);
// ISO 800
IDX_MODE_N3D_Preview( eIDX_ISO_800 )
IDX_SET( DBS:153, OBC:31, BPC:153, NR1:153, PDC:153,  UDM:153, GGM:0, ANR:153, ANR2:153, CCR:3, BOK:1, EE:153, NR3D:103, MFB:0, LCE:0);
// ISO 1200
IDX_MODE_N3D_Preview( eIDX_ISO_1200 )
IDX_SET( DBS:154, OBC:31, BPC:154, NR1:154, PDC:154,  UDM:154, GGM:0, ANR:154, ANR2:154, CCR:4, BOK:2, EE:154, NR3D:104, MFB:0, LCE:0);
// ISO 1600
IDX_MODE_N3D_Preview( eIDX_ISO_1600 )
IDX_SET( DBS:155, OBC:31, BPC:155, NR1:155, PDC:155,  UDM:155, GGM:0, ANR:155, ANR2:155, CCR:5, BOK:2, EE:155, NR3D:105, MFB:0, LCE:0);
// ISO 2000
IDX_MODE_N3D_Preview( eIDX_ISO_2000 )
IDX_SET( DBS:156, OBC:31, BPC:156, NR1:156, PDC:156,  UDM:156, GGM:0, ANR:156, ANR2:156, CCR:6, BOK:3, EE:156, NR3D:106, MFB:0, LCE:0);
// ISO 2400
IDX_MODE_N3D_Preview( eIDX_ISO_2400 )
IDX_SET( DBS:157, OBC:31, BPC:157, NR1:157, PDC:157,  UDM:157, GGM:0, ANR:157, ANR2:157, CCR:7, BOK:3, EE:157, NR3D:107, MFB:0, LCE:0);
// ISO 2800
IDX_MODE_N3D_Preview( eIDX_ISO_2800 )
IDX_SET( DBS:158, OBC:31, BPC:158, NR1:158, PDC:158,  UDM:158, GGM:0, ANR:158, ANR2:158, CCR:8, BOK:4, EE:158, NR3D:108, MFB:0, LCE:0);
// ISO 3200
IDX_MODE_N3D_Preview( eIDX_ISO_3200 )
IDX_SET( DBS:159, OBC:31, BPC:159, NR1:159, PDC:159,  UDM:159, GGM:0, ANR:159, ANR2:159, CCR:9, BOK:4, EE:159, NR3D:109, MFB:0, LCE:0);

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// N3D_Video
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ISO 100
IDX_MODE_N3D_Video( eIDX_ISO_100 )
IDX_SET( DBS:160, OBC:32, BPC:160, NR1:160, PDC:160,  UDM:160, GGM:0, ANR:160, ANR2:160, CCR:0, BOK:10, EE:160, NR3D:110, MFB:0, LCE:0);
// ISO 200
IDX_MODE_N3D_Video( eIDX_ISO_200 )
IDX_SET( DBS:161, OBC:32, BPC:161, NR1:161, PDC:161,  UDM:161, GGM:0, ANR:161, ANR2:161, CCR:1, BOK:10, EE:161, NR3D:111, MFB:0, LCE:0);
// ISO 400
IDX_MODE_N3D_Video( eIDX_ISO_400 )
IDX_SET( DBS:162, OBC:32, BPC:162, NR1:162, PDC:162,  UDM:162, GGM:0, ANR:162, ANR2:162, CCR:2, BOK:11, EE:162, NR3D:112, MFB:0, LCE:0);
// ISO 800
IDX_MODE_N3D_Video( eIDX_ISO_800 )
IDX_SET( DBS:163, OBC:33, BPC:163, NR1:163, PDC:163,  UDM:163, GGM:0, ANR:163, ANR2:163, CCR:3, BOK:11, EE:163, NR3D:113, MFB:0, LCE:0);
// ISO 1200
IDX_MODE_N3D_Video( eIDX_ISO_1200 )
IDX_SET( DBS:164, OBC:33, BPC:164, NR1:164, PDC:164,  UDM:164, GGM:0, ANR:164, ANR2:164, CCR:4, BOK:12, EE:164, NR3D:114, MFB:0, LCE:0);
// ISO 1600
IDX_MODE_N3D_Video( eIDX_ISO_1600 )
IDX_SET( DBS:165, OBC:33, BPC:165, NR1:165, PDC:165,  UDM:165, GGM:0, ANR:165, ANR2:165, CCR:5, BOK:12, EE:165, NR3D:115, MFB:0, LCE:0);
// ISO 2000
IDX_MODE_N3D_Video( eIDX_ISO_2000 )
IDX_SET( DBS:166, OBC:33, BPC:166, NR1:166, PDC:166,  UDM:166, GGM:0, ANR:166, ANR2:166, CCR:6, BOK:13, EE:166, NR3D:116, MFB:0, LCE:0);
// ISO 2400
IDX_MODE_N3D_Video( eIDX_ISO_2400 )
IDX_SET( DBS:167, OBC:33, BPC:167, NR1:167, PDC:167,  UDM:167, GGM:0, ANR:167, ANR2:167, CCR:7, BOK:13, EE:167, NR3D:117, MFB:0, LCE:0);
// ISO 2800
IDX_MODE_N3D_Video( eIDX_ISO_2800 )
IDX_SET( DBS:168, OBC:33, BPC:168, NR1:168, PDC:168,  UDM:168, GGM:0, ANR:168, ANR2:168, CCR:8, BOK:14, EE:168, NR3D:118, MFB:0, LCE:0);
// ISO 3200
IDX_MODE_N3D_Video( eIDX_ISO_3200 )
IDX_SET( DBS:169, OBC:33, BPC:169, NR1:169, PDC:169,  UDM:169, GGM:0, ANR:169, ANR2:169, CCR:9, BOK:14, EE:169, NR3D:119, MFB:0, LCE:0);

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// N3D_Capture
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ISO 100
IDX_MODE_N3D_Capture( eIDX_ISO_100 )
IDX_SET( DBS:170, OBC:34, BPC:170, NR1:170, PDC:170,  UDM:170, GGM:0, ANR:170, ANR2:170, CCR:0, BOK:5, EE:170, NR3D:0, MFB:0, LCE:0);
// ISO 200
IDX_MODE_N3D_Capture( eIDX_ISO_200 )
IDX_SET( DBS:171, OBC:34, BPC:171, NR1:171, PDC:171,  UDM:171, GGM:0, ANR:171, ANR2:171, CCR:1, BOK:5, EE:171, NR3D:0, MFB:0, LCE:0);
// ISO 400
IDX_MODE_N3D_Capture( eIDX_ISO_400 )
IDX_SET( DBS:172, OBC:34, BPC:172, NR1:172, PDC:172,  UDM:172, GGM:0, ANR:172, ANR2:172, CCR:2, BOK:6, EE:172, NR3D:0, MFB:0, LCE:0);
// ISO 800
IDX_MODE_N3D_Capture( eIDX_ISO_800 )
IDX_SET( DBS:173, OBC:35, BPC:173, NR1:173, PDC:173,  UDM:173, GGM:0, ANR:173, ANR2:173, CCR:3, BOK:6, EE:173, NR3D:0, MFB:0, LCE:0);
// ISO 1200
IDX_MODE_N3D_Capture( eIDX_ISO_1200 )
IDX_SET( DBS:174, OBC:35, BPC:174, NR1:174, PDC:174,  UDM:174, GGM:0, ANR:174, ANR2:174, CCR:4, BOK:7, EE:174, NR3D:0, MFB:0, LCE:0);
// ISO 1600
IDX_MODE_N3D_Capture( eIDX_ISO_1600 )
IDX_SET( DBS:175, OBC:35, BPC:175, NR1:175, PDC:175,  UDM:175, GGM:0, ANR:175, ANR2:175, CCR:5, BOK:7, EE:175, NR3D:0, MFB:0, LCE:0);
// ISO 2000
IDX_MODE_N3D_Capture( eIDX_ISO_2000 )
IDX_SET( DBS:176, OBC:35, BPC:176, NR1:176, PDC:176,  UDM:176, GGM:0, ANR:176, ANR2:176, CCR:6, BOK:8, EE:176, NR3D:0, MFB:0, LCE:0);
// ISO 2400
IDX_MODE_N3D_Capture( eIDX_ISO_2400 )
IDX_SET( DBS:177, OBC:35, BPC:177, NR1:177, PDC:177,  UDM:177, GGM:0, ANR:177, ANR2:177, CCR:7, BOK:8, EE:177, NR3D:0, MFB:0, LCE:0);
// ISO 2800
IDX_MODE_N3D_Capture( eIDX_ISO_2800 )
IDX_SET( DBS:178, OBC:35, BPC:178, NR1:178, PDC:178,  UDM:178, GGM:0, ANR:178, ANR2:178, CCR:8, BOK:9, EE:178, NR3D:0, MFB:0, LCE:0);
// ISO 3200
IDX_MODE_N3D_Capture( eIDX_ISO_3200 )
IDX_SET( DBS:179, OBC:35, BPC:179, NR1:179, PDC:179,  UDM:179, GGM:0, ANR:179, ANR2:179, CCR:9, BOK:9, EE:179, NR3D:0, MFB:0, LCE:0);

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// MFB_Blending_All_Off
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ISO 100
IDX_MODE_MFB_Blending_All_Off( eIDX_ISO_100 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:0, ANR2:0, CCR:0, BOK:5, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 200
IDX_MODE_MFB_Blending_All_Off( eIDX_ISO_200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:0, ANR2:0, CCR:0, BOK:5, EE:0, NR3D:0, MFB:1, LCE:0);
// ISO 400
IDX_MODE_MFB_Blending_All_Off( eIDX_ISO_400 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:0, ANR2:0, CCR:0, BOK:6, EE:0, NR3D:0, MFB:2, LCE:0);
// ISO 800
IDX_MODE_MFB_Blending_All_Off( eIDX_ISO_800 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:0, ANR2:0, CCR:0, BOK:6, EE:0, NR3D:0, MFB:3, LCE:0);
// ISO 1200
IDX_MODE_MFB_Blending_All_Off( eIDX_ISO_1200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:0, ANR2:0, CCR:0, BOK:7, EE:0, NR3D:0, MFB:4, LCE:0);
// ISO 1600
IDX_MODE_MFB_Blending_All_Off( eIDX_ISO_1600 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:0, ANR2:0, CCR:0, BOK:7, EE:0, NR3D:0, MFB:5, LCE:0);
// ISO 2000
IDX_MODE_MFB_Blending_All_Off( eIDX_ISO_2000 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:0, ANR2:0, CCR:0, BOK:8, EE:0, NR3D:0, MFB:6, LCE:0);
// ISO 2400
IDX_MODE_MFB_Blending_All_Off( eIDX_ISO_2400 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:0, ANR2:0, CCR:0, BOK:8, EE:0, NR3D:0, MFB:7, LCE:0);
// ISO 2800
IDX_MODE_MFB_Blending_All_Off( eIDX_ISO_2800 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:0, ANR2:0, CCR:0, BOK:9, EE:0, NR3D:0, MFB:8, LCE:0);
// ISO 3200
IDX_MODE_MFB_Blending_All_Off( eIDX_ISO_3200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:0, ANR2:0, CCR:0, BOK:9, EE:0, NR3D:0, MFB:9, LCE:0);

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// MFB_Blending_All_Off_SWNR
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ISO 100
IDX_MODE_MFB_Blending_All_Off_SWNR( eIDX_ISO_100 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:0, ANR2:0, CCR:0, BOK:5, EE:0, NR3D:0, MFB:10, LCE:0);
// ISO 200
IDX_MODE_MFB_Blending_All_Off_SWNR( eIDX_ISO_200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:0, ANR2:0, CCR:0, BOK:5, EE:0, NR3D:0, MFB:11, LCE:0);
// ISO 400
IDX_MODE_MFB_Blending_All_Off_SWNR( eIDX_ISO_400 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:0, ANR2:0, CCR:0, BOK:6, EE:0, NR3D:0, MFB:12, LCE:0);
// ISO 800
IDX_MODE_MFB_Blending_All_Off_SWNR( eIDX_ISO_800 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:0, ANR2:0, CCR:0, BOK:6, EE:0, NR3D:0, MFB:13, LCE:0);
// ISO 1200
IDX_MODE_MFB_Blending_All_Off_SWNR( eIDX_ISO_1200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:0, ANR2:0, CCR:0, BOK:7, EE:0, NR3D:0, MFB:14, LCE:0);
// ISO 1600
IDX_MODE_MFB_Blending_All_Off_SWNR( eIDX_ISO_1600 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:0, ANR2:0, CCR:0, BOK:7, EE:0, NR3D:0, MFB:15, LCE:0);
// ISO 2000
IDX_MODE_MFB_Blending_All_Off_SWNR( eIDX_ISO_2000 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:0, ANR2:0, CCR:0, BOK:8, EE:0, NR3D:0, MFB:16, LCE:0);
// ISO 2400
IDX_MODE_MFB_Blending_All_Off_SWNR( eIDX_ISO_2400 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:0, ANR2:0, CCR:0, BOK:8, EE:0, NR3D:0, MFB:17, LCE:0);
// ISO 2800
IDX_MODE_MFB_Blending_All_Off_SWNR( eIDX_ISO_2800 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:0, ANR2:0, CCR:0, BOK:9, EE:0, NR3D:0, MFB:18, LCE:0);
// ISO 3200
IDX_MODE_MFB_Blending_All_Off_SWNR( eIDX_ISO_3200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:0, ANR2:0, CCR:0, BOK:9, EE:0, NR3D:0, MFB:19, LCE:0);

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// MFB_PostProc_Mixing
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ISO 100
IDX_MODE_MFB_PostProc_Mixing( eIDX_ISO_100 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:180, ANR2:180, CCR:0, BOK:5, EE:180, NR3D:0, MFB:0, LCE:0);
// ISO 200
IDX_MODE_MFB_PostProc_Mixing( eIDX_ISO_200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:181, ANR2:181, CCR:0, BOK:5, EE:181, NR3D:0, MFB:1, LCE:0);
// ISO 400
IDX_MODE_MFB_PostProc_Mixing( eIDX_ISO_400 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:182, ANR2:182, CCR:0, BOK:6, EE:182, NR3D:0, MFB:2, LCE:0);
// ISO 800
IDX_MODE_MFB_PostProc_Mixing( eIDX_ISO_800 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:183, ANR2:183, CCR:0, BOK:6, EE:183, NR3D:0, MFB:3, LCE:0);
// ISO 1200
IDX_MODE_MFB_PostProc_Mixing( eIDX_ISO_1200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:184, ANR2:184, CCR:0, BOK:7, EE:184, NR3D:0, MFB:4, LCE:0);
// ISO 1600
IDX_MODE_MFB_PostProc_Mixing( eIDX_ISO_1600 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:185, ANR2:185, CCR:0, BOK:7, EE:185, NR3D:0, MFB:5, LCE:0);
// ISO 2000
IDX_MODE_MFB_PostProc_Mixing( eIDX_ISO_2000 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:186, ANR2:186, CCR:0, BOK:8, EE:186, NR3D:0, MFB:6, LCE:0);
// ISO 2400
IDX_MODE_MFB_PostProc_Mixing( eIDX_ISO_2400 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:187, ANR2:187, CCR:0, BOK:8, EE:187, NR3D:0, MFB:7, LCE:0);
// ISO 2800
IDX_MODE_MFB_PostProc_Mixing( eIDX_ISO_2800 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:188, ANR2:188, CCR:0, BOK:9, EE:188, NR3D:0, MFB:8, LCE:0);
// ISO 3200
IDX_MODE_MFB_PostProc_Mixing( eIDX_ISO_3200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:189, ANR2:189, CCR:0, BOK:9, EE:189, NR3D:0, MFB:9, LCE:0);

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// MFB_PostProc_Mixing_SWNR
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ISO 100
IDX_MODE_MFB_PostProc_Mixing_SWNR( eIDX_ISO_100 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:180, ANR2:180, CCR:0, BOK:5, EE:180, NR3D:0, MFB:10, LCE:0);
// ISO 200
IDX_MODE_MFB_PostProc_Mixing_SWNR( eIDX_ISO_200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:181, ANR2:181, CCR:0, BOK:5, EE:181, NR3D:0, MFB:11, LCE:0);
// ISO 400
IDX_MODE_MFB_PostProc_Mixing_SWNR( eIDX_ISO_400 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:182, ANR2:182, CCR:0, BOK:6, EE:182, NR3D:0, MFB:12, LCE:0);
// ISO 800
IDX_MODE_MFB_PostProc_Mixing_SWNR( eIDX_ISO_800 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:183, ANR2:183, CCR:0, BOK:6, EE:183, NR3D:0, MFB:13, LCE:0);
// ISO 1200
IDX_MODE_MFB_PostProc_Mixing_SWNR( eIDX_ISO_1200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:184, ANR2:184, CCR:0, BOK:7, EE:184, NR3D:0, MFB:14, LCE:0);
// ISO 1600
IDX_MODE_MFB_PostProc_Mixing_SWNR( eIDX_ISO_1600 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:185, ANR2:185, CCR:0, BOK:7, EE:185, NR3D:0, MFB:15, LCE:0);
// ISO 2000
IDX_MODE_MFB_PostProc_Mixing_SWNR( eIDX_ISO_2000 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:186, ANR2:186, CCR:0, BOK:8, EE:186, NR3D:0, MFB:16, LCE:0);
// ISO 2400
IDX_MODE_MFB_PostProc_Mixing_SWNR( eIDX_ISO_2400 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:187, ANR2:187, CCR:0, BOK:8, EE:187, NR3D:0, MFB:17, LCE:0);
// ISO 2800
IDX_MODE_MFB_PostProc_Mixing_SWNR( eIDX_ISO_2800 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:188, ANR2:188, CCR:0, BOK:9, EE:188, NR3D:0, MFB:18, LCE:0);
// ISO 3200
IDX_MODE_MFB_PostProc_Mixing_SWNR( eIDX_ISO_3200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:189, ANR2:189, CCR:0, BOK:9, EE:189, NR3D:0, MFB:19, LCE:0);

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// MFB_Capture_EE_OFF
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

//+++++++++++++++++++++++++++++++++++++++
//  ESensorMode_Preview
//+++++++++++++++++++++++++++++++++++++++
// ISO 100
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Preview, eIDX_ISO_100 )
IDX_SET( DBS:100, OBC:20, BPC:100, NR1:100, PDC:100,  UDM:100, GGM:0, ANR:190, ANR2:190, CCR:0, BOK:0, EE:190, NR3D:0, MFB:0, LCE:0);
// ISO 200
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Preview, eIDX_ISO_200 )
IDX_SET( DBS:101, OBC:20, BPC:101, NR1:101, PDC:101,  UDM:101, GGM:0, ANR:191, ANR2:191, CCR:1, BOK:0, EE:191, NR3D:0, MFB:0, LCE:0);
// ISO 400
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Preview, eIDX_ISO_400 )
IDX_SET( DBS:102, OBC:20, BPC:102, NR1:102, PDC:102,  UDM:102, GGM:0, ANR:192, ANR2:192, CCR:2, BOK:1, EE:192, NR3D:0, MFB:0, LCE:0);
// ISO 800
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Preview, eIDX_ISO_800 )
IDX_SET( DBS:103, OBC:21, BPC:103, NR1:103, PDC:103,  UDM:103, GGM:0, ANR:193, ANR2:193, CCR:3, BOK:1, EE:193, NR3D:0, MFB:0, LCE:0);
// ISO 1200
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Preview, eIDX_ISO_1200 )
IDX_SET( DBS:104, OBC:21, BPC:104, NR1:104, PDC:104,  UDM:104, GGM:0, ANR:194, ANR2:194, CCR:4, BOK:2, EE:194, NR3D:0, MFB:0, LCE:0);
// ISO 1600
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Preview, eIDX_ISO_1600 )
IDX_SET( DBS:105, OBC:21, BPC:105, NR1:105, PDC:105,  UDM:105, GGM:0, ANR:195, ANR2:195, CCR:5, BOK:2, EE:195, NR3D:0, MFB:0, LCE:0);
// ISO 2000
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Preview, eIDX_ISO_2000 )
IDX_SET( DBS:106, OBC:21, BPC:106, NR1:106, PDC:106,  UDM:106, GGM:0, ANR:196, ANR2:196, CCR:6, BOK:3, EE:196, NR3D:0, MFB:0, LCE:0);
// ISO 2400
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Preview, eIDX_ISO_2400 )
IDX_SET( DBS:107, OBC:21, BPC:107, NR1:107, PDC:107,  UDM:107, GGM:0, ANR:197, ANR2:197, CCR:7, BOK:3, EE:197, NR3D:0, MFB:0, LCE:0);
// ISO 2800
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Preview, eIDX_ISO_2800 )
IDX_SET( DBS:108, OBC:21, BPC:108, NR1:108, PDC:108,  UDM:108, GGM:0, ANR:198, ANR2:198, CCR:8, BOK:4, EE:198, NR3D:0, MFB:0, LCE:0);
// ISO 3200
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Preview, eIDX_ISO_3200 )
IDX_SET( DBS:109, OBC:21, BPC:109, NR1:109, PDC:109,  UDM:109, GGM:0, ANR:199, ANR2:199, CCR:9, BOK:4, EE:199, NR3D:0, MFB:0, LCE:0);

//+++++++++++++++++++++++++++++++++++++++
//  ESensorMode_Capture
//+++++++++++++++++++++++++++++++++++++++
// ISO 100
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Capture, eIDX_ISO_100 )
IDX_SET( DBS:110, OBC:22, BPC:110, NR1:110, PDC:110,  UDM:110, GGM:0, ANR:190, ANR2:190, CCR:0, BOK:5, EE:190, NR3D:0, MFB:0, LCE:0);
// ISO 200
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Capture, eIDX_ISO_200 )
IDX_SET( DBS:111, OBC:22, BPC:111, NR1:111, PDC:111,  UDM:111, GGM:0, ANR:191, ANR2:191, CCR:1, BOK:5, EE:191, NR3D:0, MFB:0, LCE:0);
// ISO 400
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Capture, eIDX_ISO_400 )
IDX_SET( DBS:112, OBC:22, BPC:112, NR1:112, PDC:112,  UDM:112, GGM:0, ANR:192, ANR2:192, CCR:2, BOK:6, EE:192, NR3D:0, MFB:0, LCE:0);
// ISO 800
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Capture, eIDX_ISO_800 )
IDX_SET( DBS:113, OBC:23, BPC:113, NR1:113, PDC:113,  UDM:113, GGM:0, ANR:193, ANR2:193, CCR:3, BOK:6, EE:193, NR3D:0, MFB:0, LCE:0);
// ISO 1200
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Capture, eIDX_ISO_1200 )
IDX_SET( DBS:114, OBC:23, BPC:114, NR1:114, PDC:114,  UDM:114, GGM:0, ANR:194, ANR2:194, CCR:4, BOK:7, EE:194, NR3D:0, MFB:0, LCE:0);
// ISO 1600
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Capture, eIDX_ISO_1600 )
IDX_SET( DBS:115, OBC:23, BPC:115, NR1:115, PDC:115,  UDM:115, GGM:0, ANR:195, ANR2:195, CCR:5, BOK:7, EE:195, NR3D:0, MFB:0, LCE:0);
// ISO 2000
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Capture, eIDX_ISO_2000 )
IDX_SET( DBS:116, OBC:23, BPC:116, NR1:116, PDC:116,  UDM:116, GGM:0, ANR:196, ANR2:196, CCR:6, BOK:8, EE:196, NR3D:0, MFB:0, LCE:0);
// ISO 2400
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Capture, eIDX_ISO_2400 )
IDX_SET( DBS:117, OBC:23, BPC:117, NR1:117, PDC:117,  UDM:117, GGM:0, ANR:197, ANR2:197, CCR:7, BOK:8, EE:197, NR3D:0, MFB:0, LCE:0);
// ISO 2800
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Capture, eIDX_ISO_2800 )
IDX_SET( DBS:118, OBC:23, BPC:118, NR1:118, PDC:118,  UDM:118, GGM:0, ANR:198, ANR2:198, CCR:8, BOK:9, EE:198, NR3D:0, MFB:0, LCE:0);
// ISO 3200
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Capture, eIDX_ISO_3200 )
IDX_SET( DBS:119, OBC:23, BPC:119, NR1:119, PDC:119,  UDM:119, GGM:0, ANR:199, ANR2:199, CCR:9, BOK:9, EE:199, NR3D:0, MFB:0, LCE:0);

//+++++++++++++++++++++++++++++++++++++++
//  ESensorMode_Video
//+++++++++++++++++++++++++++++++++++++++
// ISO 100
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Video, eIDX_ISO_100 )
IDX_SET( DBS:120, OBC:24, BPC:120, NR1:120, PDC:120,  UDM:120, GGM:0, ANR:190, ANR2:190, CCR:0, BOK:10, EE:190, NR3D:0, MFB:0, LCE:0);
// ISO 200
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Video, eIDX_ISO_200 )
IDX_SET( DBS:121, OBC:24, BPC:121, NR1:121, PDC:121,  UDM:121, GGM:0, ANR:191, ANR2:191, CCR:1, BOK:10, EE:191, NR3D:0, MFB:0, LCE:0);
// ISO 400
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Video, eIDX_ISO_400 )
IDX_SET( DBS:122, OBC:24, BPC:122, NR1:122, PDC:122,  UDM:122, GGM:0, ANR:192, ANR2:192, CCR:2, BOK:11, EE:192, NR3D:0, MFB:0, LCE:0);
// ISO 800
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Video, eIDX_ISO_800 )
IDX_SET( DBS:123, OBC:25, BPC:123, NR1:123, PDC:123,  UDM:123, GGM:0, ANR:193, ANR2:193, CCR:3, BOK:11, EE:193, NR3D:0, MFB:0, LCE:0);
// ISO 1200
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Video, eIDX_ISO_1200 )
IDX_SET( DBS:124, OBC:25, BPC:124, NR1:124, PDC:124,  UDM:124, GGM:0, ANR:194, ANR2:194, CCR:4, BOK:12, EE:194, NR3D:0, MFB:0, LCE:0);
// ISO 1600
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Video, eIDX_ISO_1600 )
IDX_SET( DBS:125, OBC:25, BPC:125, NR1:125, PDC:125,  UDM:125, GGM:0, ANR:195, ANR2:195, CCR:5, BOK:12, EE:195, NR3D:0, MFB:0, LCE:0);
// ISO 2000
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Video, eIDX_ISO_2000 )
IDX_SET( DBS:126, OBC:25, BPC:126, NR1:126, PDC:126,  UDM:126, GGM:0, ANR:196, ANR2:196, CCR:6, BOK:13, EE:196, NR3D:0, MFB:0, LCE:0);
// ISO 2400
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Video, eIDX_ISO_2400 )
IDX_SET( DBS:127, OBC:25, BPC:127, NR1:127, PDC:127,  UDM:127, GGM:0, ANR:197, ANR2:197, CCR:7, BOK:13, EE:197, NR3D:0, MFB:0, LCE:0);
// ISO 2800
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Video, eIDX_ISO_2800 )
IDX_SET( DBS:128, OBC:25, BPC:128, NR1:128, PDC:128,  UDM:128, GGM:0, ANR:198, ANR2:198, CCR:8, BOK:14, EE:198, NR3D:0, MFB:0, LCE:0);
// ISO 3200
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_Video, eIDX_ISO_3200 )
IDX_SET( DBS:129, OBC:25, BPC:129, NR1:129, PDC:129,  UDM:129, GGM:0, ANR:199, ANR2:199, CCR:9, BOK:14, EE:199, NR3D:0, MFB:0, LCE:0);

//+++++++++++++++++++++++++++++++++++++++
//  ESensorMode_SlimVideo1
//+++++++++++++++++++++++++++++++++++++++
// ISO 100
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_SlimVideo1, eIDX_ISO_100 )
IDX_SET( DBS:130, OBC:26, BPC:130, NR1:130, PDC:130,  UDM:130, GGM:0, ANR:190, ANR2:190, CCR:0, BOK:15, EE:190, NR3D:0, MFB:0, LCE:0);
// ISO 200
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_SlimVideo1, eIDX_ISO_200 )
IDX_SET( DBS:131, OBC:26, BPC:131, NR1:131, PDC:131,  UDM:131, GGM:0, ANR:191, ANR2:191, CCR:1, BOK:15, EE:191, NR3D:0, MFB:0, LCE:0);
// ISO 400
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_SlimVideo1, eIDX_ISO_400 )
IDX_SET( DBS:132, OBC:26, BPC:132, NR1:132, PDC:132,  UDM:132, GGM:0, ANR:192, ANR2:192, CCR:2, BOK:16, EE:192, NR3D:0, MFB:0, LCE:0);
// ISO 800
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_SlimVideo1, eIDX_ISO_800 )
IDX_SET( DBS:133, OBC:27, BPC:133, NR1:133, PDC:133,  UDM:133, GGM:0, ANR:193, ANR2:193, CCR:3, BOK:16, EE:193, NR3D:0, MFB:0, LCE:0);
// ISO 1200
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_SlimVideo1, eIDX_ISO_1200 )
IDX_SET( DBS:134, OBC:27, BPC:134, NR1:134, PDC:134,  UDM:134, GGM:0, ANR:194, ANR2:194, CCR:4, BOK:17, EE:194, NR3D:0, MFB:0, LCE:0);
// ISO 1600
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_SlimVideo1, eIDX_ISO_1600 )
IDX_SET( DBS:135, OBC:27, BPC:135, NR1:135, PDC:135,  UDM:135, GGM:0, ANR:195, ANR2:195, CCR:5, BOK:17, EE:195, NR3D:0, MFB:0, LCE:0);
// ISO 2000
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_SlimVideo1, eIDX_ISO_2000 )
IDX_SET( DBS:136, OBC:27, BPC:136, NR1:136, PDC:136,  UDM:136, GGM:0, ANR:196, ANR2:196, CCR:6, BOK:18, EE:196, NR3D:0, MFB:0, LCE:0);
// ISO 2400
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_SlimVideo1, eIDX_ISO_2400 )
IDX_SET( DBS:137, OBC:27, BPC:137, NR1:137, PDC:137,  UDM:137, GGM:0, ANR:197, ANR2:197, CCR:7, BOK:18, EE:197, NR3D:0, MFB:0, LCE:0);
// ISO 2800
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_SlimVideo1, eIDX_ISO_2800 )
IDX_SET( DBS:138, OBC:27, BPC:138, NR1:138, PDC:138,  UDM:138, GGM:0, ANR:198, ANR2:198, CCR:8, BOK:19, EE:198, NR3D:0, MFB:0, LCE:0);
// ISO 3200
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_SlimVideo1, eIDX_ISO_3200 )
IDX_SET( DBS:139, OBC:27, BPC:139, NR1:139, PDC:139,  UDM:139, GGM:0, ANR:199, ANR2:199, CCR:9, BOK:19, EE:199, NR3D:0, MFB:0, LCE:0);

//+++++++++++++++++++++++++++++++++++++++
//  ESensorMode_SlimVideo2
//+++++++++++++++++++++++++++++++++++++++
// ISO 100
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_SlimVideo2, eIDX_ISO_100 )
IDX_SET( DBS:140, OBC:28, BPC:140, NR1:140, PDC:140,  UDM:140, GGM:0, ANR:190, ANR2:190, CCR:0, BOK:20, EE:190, NR3D:0, MFB:0, LCE:0);
// ISO 200
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_SlimVideo2, eIDX_ISO_200 )
IDX_SET( DBS:141, OBC:28, BPC:141, NR1:141, PDC:141,  UDM:141, GGM:0, ANR:191, ANR2:191, CCR:1, BOK:20, EE:191, NR3D:0, MFB:0, LCE:0);
// ISO 400
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_SlimVideo2, eIDX_ISO_400 )
IDX_SET( DBS:142, OBC:28, BPC:142, NR1:142, PDC:142,  UDM:142, GGM:0, ANR:192, ANR2:192, CCR:2, BOK:21, EE:192, NR3D:0, MFB:0, LCE:0);
// ISO 800
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_SlimVideo2, eIDX_ISO_800 )
IDX_SET( DBS:143, OBC:29, BPC:143, NR1:143, PDC:143,  UDM:143, GGM:0, ANR:193, ANR2:193, CCR:3, BOK:21, EE:193, NR3D:0, MFB:0, LCE:0);
// ISO 1200
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_SlimVideo2, eIDX_ISO_1200 )
IDX_SET( DBS:144, OBC:29, BPC:144, NR1:144, PDC:144,  UDM:144, GGM:0, ANR:194, ANR2:194, CCR:4, BOK:22, EE:194, NR3D:0, MFB:0, LCE:0);
// ISO 1600
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_SlimVideo2, eIDX_ISO_1600 )
IDX_SET( DBS:145, OBC:29, BPC:145, NR1:145, PDC:145,  UDM:145, GGM:0, ANR:195, ANR2:195, CCR:5, BOK:22, EE:195, NR3D:0, MFB:0, LCE:0);
// ISO 2000
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_SlimVideo2, eIDX_ISO_2000 )
IDX_SET( DBS:146, OBC:29, BPC:146, NR1:146, PDC:146,  UDM:146, GGM:0, ANR:196, ANR2:196, CCR:6, BOK:23, EE:196, NR3D:0, MFB:0, LCE:0);
// ISO 2400
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_SlimVideo2, eIDX_ISO_2400 )
IDX_SET( DBS:147, OBC:29, BPC:147, NR1:147, PDC:147,  UDM:147, GGM:0, ANR:197, ANR2:197, CCR:7, BOK:23, EE:197, NR3D:0, MFB:0, LCE:0);
// ISO 2800
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_SlimVideo2, eIDX_ISO_2800 )
IDX_SET( DBS:148, OBC:29, BPC:148, NR1:148, PDC:148,  UDM:148, GGM:0, ANR:198, ANR2:198, CCR:8, BOK:24, EE:198, NR3D:0, MFB:0, LCE:0);
// ISO 3200
IDX_MODE_MFB_Capture_EE_Off( ESensorMode_SlimVideo2, eIDX_ISO_3200 )
IDX_SET( DBS:149, OBC:29, BPC:149, NR1:149, PDC:149,  UDM:149, GGM:0, ANR:199, ANR2:199, CCR:9, BOK:24, EE:199, NR3D:0, MFB:0, LCE:0);

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// IHDR_Preview
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ISO 100
IDX_MODE_IHDR_Preview( eIDX_ISO_100 )
IDX_SET( DBS:180, OBC:36, BPC:180, NR1:180, PDC:180,  UDM:180, GGM:0, ANR:200, ANR2:200, CCR:10, BOK:0, EE:200, NR3D:120, MFB:0, LCE:0);
// ISO 200
IDX_MODE_IHDR_Preview( eIDX_ISO_200 )
IDX_SET( DBS:181, OBC:36, BPC:181, NR1:181, PDC:181,  UDM:181, GGM:0, ANR:201, ANR2:201, CCR:11, BOK:0, EE:201, NR3D:121, MFB:0, LCE:1);
// ISO 400
IDX_MODE_IHDR_Preview( eIDX_ISO_400 )
IDX_SET( DBS:182, OBC:36, BPC:182, NR1:182, PDC:182,  UDM:182, GGM:0, ANR:202, ANR2:202, CCR:12, BOK:1, EE:202, NR3D:122, MFB:0, LCE:2);
// ISO 800
IDX_MODE_IHDR_Preview( eIDX_ISO_800 )
IDX_SET( DBS:183, OBC:37, BPC:183, NR1:183, PDC:183,  UDM:183, GGM:0, ANR:203, ANR2:203, CCR:13, BOK:1, EE:203, NR3D:123, MFB:0, LCE:3);
// ISO 1200
IDX_MODE_IHDR_Preview( eIDX_ISO_1200 )
IDX_SET( DBS:184, OBC:37, BPC:184, NR1:184, PDC:184,  UDM:184, GGM:0, ANR:204, ANR2:204, CCR:14, BOK:2, EE:204, NR3D:124, MFB:0, LCE:4);
// ISO 1600
IDX_MODE_IHDR_Preview( eIDX_ISO_1600 )
IDX_SET( DBS:185, OBC:37, BPC:185, NR1:185, PDC:185,  UDM:185, GGM:0, ANR:205, ANR2:205, CCR:15, BOK:2, EE:205, NR3D:125, MFB:0, LCE:5);
// ISO 2000
IDX_MODE_IHDR_Preview( eIDX_ISO_2000 )
IDX_SET( DBS:186, OBC:37, BPC:186, NR1:186, PDC:186,  UDM:186, GGM:0, ANR:206, ANR2:206, CCR:16, BOK:3, EE:206, NR3D:126, MFB:0, LCE:6);
// ISO 2400
IDX_MODE_IHDR_Preview( eIDX_ISO_2400 )
IDX_SET( DBS:187, OBC:37, BPC:187, NR1:187, PDC:187,  UDM:187, GGM:0, ANR:207, ANR2:207, CCR:17, BOK:3, EE:207, NR3D:127, MFB:0, LCE:7);
// ISO 2800
IDX_MODE_IHDR_Preview( eIDX_ISO_2800 )
IDX_SET( DBS:188, OBC:37, BPC:188, NR1:188, PDC:188,  UDM:188, GGM:0, ANR:208, ANR2:208, CCR:18, BOK:4, EE:208, NR3D:128, MFB:0, LCE:8);
// ISO 3200
IDX_MODE_IHDR_Preview( eIDX_ISO_3200 )
IDX_SET( DBS:189, OBC:37, BPC:189, NR1:189, PDC:189,  UDM:189, GGM:0, ANR:209, ANR2:209, CCR:19, BOK:4, EE:209, NR3D:129, MFB:0, LCE:9);

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// IHDR_Video
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ISO 100
IDX_MODE_IHDR_Video( eIDX_ISO_100 )
IDX_SET( DBS:190, OBC:38, BPC:190, NR1:190, PDC:190,  UDM:190, GGM:0, ANR:210, ANR2:210, CCR:20, BOK:10, EE:210, NR3D:130, MFB:0, LCE:0);
// ISO 200
IDX_MODE_IHDR_Video( eIDX_ISO_200 )
IDX_SET( DBS:191, OBC:38, BPC:191, NR1:191, PDC:191,  UDM:191, GGM:0, ANR:211, ANR2:211, CCR:21, BOK:10, EE:211, NR3D:131, MFB:0, LCE:1);
// ISO 400
IDX_MODE_IHDR_Video( eIDX_ISO_400 )
IDX_SET( DBS:192, OBC:38, BPC:192, NR1:192, PDC:192,  UDM:192, GGM:0, ANR:212, ANR2:212, CCR:22, BOK:11, EE:212, NR3D:132, MFB:0, LCE:2);
// ISO 800
IDX_MODE_IHDR_Video( eIDX_ISO_800 )
IDX_SET( DBS:193, OBC:39, BPC:193, NR1:193, PDC:193,  UDM:193, GGM:0, ANR:213, ANR2:213, CCR:23, BOK:11, EE:213, NR3D:133, MFB:0, LCE:3);
// ISO 1200
IDX_MODE_IHDR_Video( eIDX_ISO_1200 )
IDX_SET( DBS:194, OBC:39, BPC:194, NR1:194, PDC:194,  UDM:194, GGM:0, ANR:214, ANR2:214, CCR:24, BOK:12, EE:214, NR3D:134, MFB:0, LCE:4);
// ISO 1600
IDX_MODE_IHDR_Video( eIDX_ISO_1600 )
IDX_SET( DBS:195, OBC:39, BPC:195, NR1:195, PDC:195,  UDM:195, GGM:0, ANR:215, ANR2:215, CCR:25, BOK:12, EE:215, NR3D:135, MFB:0, LCE:5);
// ISO 2000
IDX_MODE_IHDR_Video( eIDX_ISO_2000 )
IDX_SET( DBS:196, OBC:39, BPC:196, NR1:196, PDC:196,  UDM:196, GGM:0, ANR:216, ANR2:216, CCR:26, BOK:13, EE:216, NR3D:136, MFB:0, LCE:6);
// ISO 2400
IDX_MODE_IHDR_Video( eIDX_ISO_2400 )
IDX_SET( DBS:197, OBC:39, BPC:197, NR1:197, PDC:197,  UDM:197, GGM:0, ANR:217, ANR2:217, CCR:27, BOK:13, EE:217, NR3D:137, MFB:0, LCE:7);
// ISO 2800
IDX_MODE_IHDR_Video( eIDX_ISO_2800 )
IDX_SET( DBS:198, OBC:39, BPC:198, NR1:198, PDC:198,  UDM:198, GGM:0, ANR:218, ANR2:218, CCR:28, BOK:14, EE:218, NR3D:138, MFB:0, LCE:8);
// ISO 3200
IDX_MODE_IHDR_Video( eIDX_ISO_3200 )
IDX_SET( DBS:199, OBC:39, BPC:199, NR1:199, PDC:199,  UDM:199, GGM:0, ANR:219, ANR2:219, CCR:29, BOK:14, EE:219, NR3D:139, MFB:0, LCE:9);

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Multi Pass ANR1
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ISO 100
IDX_MODE_Multi_Pass_ANR1( eIDX_ISO_100 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:220, ANR2:220, CCR:30, BOK:5, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 200
IDX_MODE_Multi_Pass_ANR1( eIDX_ISO_200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:221, ANR2:221, CCR:31, BOK:5, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 400
IDX_MODE_Multi_Pass_ANR1( eIDX_ISO_400 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:222, ANR2:222, CCR:32, BOK:6, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 800
IDX_MODE_Multi_Pass_ANR1( eIDX_ISO_800 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:223, ANR2:223, CCR:33, BOK:6, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 1200
IDX_MODE_Multi_Pass_ANR1( eIDX_ISO_1200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:224, ANR2:224, CCR:34, BOK:7, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 1600
IDX_MODE_Multi_Pass_ANR1( eIDX_ISO_1600 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:225, ANR2:225, CCR:35, BOK:7, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 2000
IDX_MODE_Multi_Pass_ANR1( eIDX_ISO_2000 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:226, ANR2:226, CCR:36, BOK:8, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 2400
IDX_MODE_Multi_Pass_ANR1( eIDX_ISO_2400 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:227, ANR2:227, CCR:37, BOK:8, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 2800
IDX_MODE_Multi_Pass_ANR1( eIDX_ISO_2800 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:228, ANR2:228, CCR:38, BOK:9, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 3200
IDX_MODE_Multi_Pass_ANR1( eIDX_ISO_3200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:229, ANR2:229, CCR:39, BOK:9, EE:0, NR3D:0, MFB:0, LCE:0);

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Multi Pass ANR2
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ISO 100
IDX_MODE_Multi_Pass_ANR2( eIDX_ISO_100 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:230, ANR2:230, CCR:40, BOK:5, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 200
IDX_MODE_Multi_Pass_ANR2( eIDX_ISO_200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:231, ANR2:231, CCR:41, BOK:5, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 400
IDX_MODE_Multi_Pass_ANR2( eIDX_ISO_400 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:232, ANR2:232, CCR:42, BOK:6, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 800
IDX_MODE_Multi_Pass_ANR2( eIDX_ISO_800 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:233, ANR2:233, CCR:43, BOK:6, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 1200
IDX_MODE_Multi_Pass_ANR2( eIDX_ISO_1200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:234, ANR2:234, CCR:44, BOK:7, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 1600
IDX_MODE_Multi_Pass_ANR2( eIDX_ISO_1600 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:235, ANR2:235, CCR:45, BOK:7, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 2000
IDX_MODE_Multi_Pass_ANR2( eIDX_ISO_2000 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:236, ANR2:236, CCR:46, BOK:8, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 2400
IDX_MODE_Multi_Pass_ANR2( eIDX_ISO_2400 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:237, ANR2:237, CCR:47, BOK:8, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 2800
IDX_MODE_Multi_Pass_ANR2( eIDX_ISO_2800 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:238, ANR2:238, CCR:48, BOK:9, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 3200
IDX_MODE_Multi_Pass_ANR2( eIDX_ISO_3200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:239, ANR2:239, CCR:49, BOK:9, EE:0, NR3D:0, MFB:0, LCE:0);

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// MFB Multi Pass ANR1
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ISO 100
IDX_MODE_MFB_Multi_Pass_ANR1( eIDX_ISO_100 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:240, ANR2:240, CCR:50, BOK:5, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 200
IDX_MODE_MFB_Multi_Pass_ANR1( eIDX_ISO_200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:241, ANR2:241, CCR:51, BOK:5, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 400
IDX_MODE_MFB_Multi_Pass_ANR1( eIDX_ISO_400 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:242, ANR2:242, CCR:52, BOK:6, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 800
IDX_MODE_MFB_Multi_Pass_ANR1( eIDX_ISO_800 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:243, ANR2:243, CCR:53, BOK:6, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 1200
IDX_MODE_MFB_Multi_Pass_ANR1( eIDX_ISO_1200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:244, ANR2:244, CCR:54, BOK:7, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 1600
IDX_MODE_MFB_Multi_Pass_ANR1( eIDX_ISO_1600 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:245, ANR2:245, CCR:55, BOK:7, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 2000
IDX_MODE_MFB_Multi_Pass_ANR1( eIDX_ISO_2000 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:246, ANR2:246, CCR:56, BOK:8, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 2400
IDX_MODE_MFB_Multi_Pass_ANR1( eIDX_ISO_2400 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:247, ANR2:247, CCR:57, BOK:8, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 2800
IDX_MODE_MFB_Multi_Pass_ANR1( eIDX_ISO_2800 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:248, ANR2:248, CCR:58, BOK:9, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 3200
IDX_MODE_MFB_Multi_Pass_ANR1( eIDX_ISO_3200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:249, ANR2:249, CCR:59, BOK:9, EE:0, NR3D:0, MFB:0, LCE:0);

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Multi Pass ANR2
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ISO 100
IDX_MODE_MFB_Multi_Pass_ANR2( eIDX_ISO_100 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:250, ANR2:250, CCR:60, BOK:5, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 200
IDX_MODE_MFB_Multi_Pass_ANR2( eIDX_ISO_200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:251, ANR2:251, CCR:61, BOK:5, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 400
IDX_MODE_MFB_Multi_Pass_ANR2( eIDX_ISO_400 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:252, ANR2:252, CCR:62, BOK:6, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 800
IDX_MODE_MFB_Multi_Pass_ANR2( eIDX_ISO_800 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:253, ANR2:253, CCR:63, BOK:6, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 1200
IDX_MODE_MFB_Multi_Pass_ANR2( eIDX_ISO_1200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:254, ANR2:254, CCR:64, BOK:7, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 1600
IDX_MODE_MFB_Multi_Pass_ANR2( eIDX_ISO_1600 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:255, ANR2:255, CCR:65, BOK:7, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 2000
IDX_MODE_MFB_Multi_Pass_ANR2( eIDX_ISO_2000 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:256, ANR2:256, CCR:66, BOK:8, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 2400
IDX_MODE_MFB_Multi_Pass_ANR2( eIDX_ISO_2400 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:257, ANR2:257, CCR:67, BOK:8, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 2800
IDX_MODE_MFB_Multi_Pass_ANR2( eIDX_ISO_2800 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:258, ANR2:258, CCR:68, BOK:9, EE:0, NR3D:0, MFB:0, LCE:0);
// ISO 3200
IDX_MODE_MFB_Multi_Pass_ANR2( eIDX_ISO_3200 )
IDX_SET( DBS:0, OBC:0, BPC:0, NR1:0, PDC:0,  UDM:0, GGM:0, ANR:259, ANR2:259, CCR:69, BOK:9, EE:0, NR3D:0, MFB:0, LCE:0);

#endif //  _CFG_ISP_TUNING_IDX_FEATURE_H_

